version: 2.1

parameters:
  pull_request:
    type: boolean
    default: true

orbs:
  welcome: circleci/welcome-orb@0.4.1
  aws-cli: circleci/aws-cli@2.1.0
  aws-s3: circleci/aws-s3@3.1.1

executors:
  aws-cli:
    working_directory: ~/workspace
    environment:
      AWS_ACCESS_KEY_ID: $AWS_ACCESS_KEY_ID
      AWS_SECRET_ACCESS_KEY: $AWS_SECRET_ACCESS_KEY
      AWS_DEFAULT_REGION: ap-northeast-1
    docker:
      - image: amazon/aws-cli
  default:
    working_directory: ~/workspace
    docker:
      - image: circleci/node:14

commands:
  prepare_node_dependency:
    description: Prepare
    steps:
      - checkout

      - run: sudo apt-get update && sudo apt-get install -y nasm autoconf automake libtool dpkg libpng-dev g++

      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "package.json" }}
            - v1-dependencies-

      - run: yarn install

      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}

      - run: yarn company-app:css && yarn company-app:build && yarn company-app:export

      - run: |
        touch apps/profile-app/.env
        echo "NEXT_LIVE_STRIPE_PUBLIC_KEY="$NEXT_LIVE_STRIPE_PUBLIC_KEY >> apps/profile-app/.env
        echo "NEXT_LIVE_STRIPE_SECRET_KEY="$NEXT_LIVE_STRIPE_SECRET_KEY >> apps/profile-app/.env
        echo "NEXT_LIVE_LAMBDA_ENDPOINT="$NEXT_LIVE_LAMBDA_ENDPOINT >> apps/profile-app/.env

      - run: yarn profile-app:css && yarn profile-app:build && yarn profile-app:export

  company_and_deploy:
    description: Company Deploy
    steps:
      - aws-s3/sync:
          from: dist/apps/company-app/exported/
          to: s3://nekohack.me
          arguments: |
            --acl public-read \
            --cache-control "max-age=86400"

  profile_and_deploy:
    description: Profile Deploy
    steps:
      - aws-s3/sync:
          from: dist/apps/profile-app/exported/
          to: s3://yuma-kitamura.nekohack.me
          arguments: |
            --acl public-read \
            --cache-control "max-age=86400"

jobs:
  install_and_setup_cli:
    executor:
      name: aws-cli
    steps:
      - aws-cli/install
      - aws-cli/setup

  main_build:
    executor:
      name: default
    steps:
      - checkout
      - aws-cli/install
      - aws-cli/setup
      - prepare_node_dependency
      # - company_and_deploy
      # - profile_and_deploy

workflows:
  version: 2
  push:
    jobs:
      - main_build:
          filters:
            branches:
              only: main
  pull_request:
    when: << pipeline.parameters.pull_request >>
    jobs:
      - main_build
